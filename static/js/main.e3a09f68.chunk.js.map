{"version":3,"sources":["components/ServersTable/ServerTableColumns.tsx","components/ServersTable/ServersTable.tsx","types/server.ts","App.tsx","api/getServers.ts","serviceWorker.ts","index.tsx"],"names":["serversTableColumns","title","dataIndex","key","render","text","icon","faEdit","tags","map","tag","color","length","toUpperCase","faRedoAlt","record","faTrashAlt","ServersTable","data","servers","server","name","dataSource","columns","bordered","style","direction","Server","system","status","ram","cores","this","App","className","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8WA2EeA,EApEa,CACxB,CACIC,MAAO,wCACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GAAD,OACJ,8BACI,kBAAC,IAAD,CAAiBC,KAAMC,WACvB,gCAAMF,MAIlB,CACIJ,MAAO,oDACPC,UAAW,SACXC,IAAK,UAET,CACIF,MAAO,gEACPE,IAAK,OACLD,UAAW,OACXE,OAAQ,SAACI,GAAD,OACJ,8BACKA,EAAKC,KAAI,SAAAC,GACN,IAAIC,EAAQD,EAAIE,OAAS,EAAI,WAAa,QAI1C,MAHY,UAARF,IACAC,EAAQ,WAGR,kBAAC,IAAD,CAAKA,MAAOA,EAAOR,IAAKO,GACnBA,EAAIG,qBAO7B,CACIZ,MAAO,iCACPC,UAAW,SACXC,IAAK,SACLC,OAAQ,SAACC,GAAD,OACJ,8BACI,kBAAC,IAAD,CAAiBC,KAAMQ,cACvB,+BAAKT,MAIjB,CACIJ,MAAO,qBACPC,UAAW,MACXC,IAAK,OAET,CACIF,MAAO,0DACPC,UAAW,QACXC,IAAK,SAET,CACIF,MAAO,SACPE,IAAK,SACLC,OAAQ,SAACC,EAAcU,GAAf,OACJ,8BACI,kBAAC,IAAD,CAAiBT,KAAMU,mBC7CxBC,G,OAXmC,SAAC,GAAe,IACxDC,EADuD,EAAbC,QAC3BV,KAAI,SAAAW,GAAM,sBACxBA,EADwB,CAE3BjB,IAAKiB,EAAOC,UAGhB,OACI,kBAAC,IAAD,CAAOC,WAAYJ,EAAMK,QAASvB,EAAqBwB,UAAU,EAAOC,MAAO,CAACC,UAAW,W,SCrBtFC,EAQT,WAAYN,EAAcO,EAAgBC,EAAgBrB,EAAqBsB,EAAaC,GAAe,yBAP3GV,UAO0G,OAN1GO,YAM0G,OAL1GC,YAK0G,OAJ1GrB,UAI0G,OAH1GsB,SAG0G,OAF1GC,WAE0G,EACtGC,KAAKX,KAAOA,EACZW,KAAKJ,OAASA,EACdI,KAAKH,OAASA,EACdG,KAAKxB,KAAOA,EACZwB,KAAKF,IAAMA,EACXE,KAAKD,MAAQA,GCINE,MAXf,WACE,OACE,yBAAKC,UAAU,OACX,4BACA,4BACA,4BACA,kBAAC,EAAD,CAAcf,QCXV,CACH,IAAIQ,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACD,MAEH,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,MAEJ,IAAIA,EACA,QACA,YACA,2BACA,CAAC,eACD,OACA,MAEJ,IAAIA,EACA,SACA,QACA,OACA,CAAC,eACD,QACA,MAEJ,IAAIA,EACA,QACA,QACA,2BACA,CAAC,SACD,OACA,WCrsBOQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASpC,OACP,kBAAC,IAAMqC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e3a09f68.chunk.js","sourcesContent":["import React from \"react\";\nimport {Tag} from \"antd\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faEdit} from \"@fortawesome/free-regular-svg-icons/faEdit\";\nimport {faTrashAlt} from \"@fortawesome/free-regular-svg-icons/faTrashAlt\";\nimport {faRedoAlt} from \"@fortawesome/free-solid-svg-icons/faRedoAlt\";\n\nconst serversTableColumns = [\n    {\n        title: 'שם השרת',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text: string) => (\n            <span>\n                <FontAwesomeIcon icon={faEdit} />\n                <a>  {text}</a>\n            </span>\n        ),\n    },\n    {\n        title: 'שם המערכת',\n        dataIndex: 'system',\n        key: 'system',\n    },\n    {\n        title: 'מבצעי/טסטים',\n        key: 'tags',\n        dataIndex: 'tags',\n        render: (tags: Array<string>)  => (\n            <span>\n                {tags.map(tag => {\n                    let color = tag.length > 5 ? 'geekblue' : 'green';\n                    if (tag === 'Tests') {\n                        color = 'volcano';\n                    }\n                    return (\n                        <Tag color={color} key={tag}>\n                            {tag.toUpperCase()}\n                        </Tag>\n                    );\n                })}\n            </span>\n        ),\n    },\n    {\n        title: 'סטטוס',\n        dataIndex: 'status',\n        key: 'status',\n        render: (text:string) => (\n            <span>\n                <FontAwesomeIcon icon={faRedoAlt} />\n                <a> {text}</a>\n            </span>\n        )\n    },\n    {\n        title: 'ראם',\n        dataIndex: 'ram',\n        key: 'ram',\n    },\n    {\n        title: 'מספר ליבות',\n        dataIndex: 'cores',\n        key: 'cores',\n    },\n    {\n        title: 'Delete',\n        key: 'delete',\n        render: (text: string, record:any) => (\n            <span>\n                <FontAwesomeIcon icon={faTrashAlt} />\n            </span>\n),},\n];\n\nexport default serversTableColumns;\n","import React from \"react\";\nimport { Table, Tag } from 'antd';\nimport \"antd/lib/table/style/index.css\"\nimport \"antd/lib/tag/style/index.css\"\nimport \"antd/lib/pagination/style/index.css\"\nimport serversTableColumns from \"./ServerTableColumns\";\nimport {Server} from \"../../types/server\";\nimport \"./ServersTable.css\"\n\ninterface ServersTableProps {\n    servers: Array<Server>\n}\n\n\nconst ServersTable: React.FC<ServersTableProps> = ({servers}) => {\n    const data = servers.map(server => ({\n        ...server,\n        key: server.name,\n    }));\n\n    return (\n        <Table dataSource={data} columns={serversTableColumns} bordered={false} style={{direction: 'rtl'}}/>\n        );\n};\n\nexport default ServersTable;\n","export class Server {\n    name: string;\n    system: string;\n    status: string;\n    tags: Array<string>;\n    ram: string;\n    cores: string;\n\n    constructor(name: string, system: string, status: string, tags: Array<string>, ram: string, cores:string) {\n        this.name = name;\n        this.system = system;\n        this.status = status;\n        this.tags = tags;\n        this.ram = ram;\n        this.cores = cores;\n    }\n}","import React from 'react';\nimport './App.css';\nimport ServersTable from \"./components/ServersTable/ServersTable\";\nimport {getServers} from \"./api/getServers\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <p></p>\n        <p></p>\n        <p></p>\n        <ServersTable servers={getServers()}/>\n    </div>\n  );\n}\n\nexport default App;\n","import {Server} from \"../types/server\"\n export const getServers = () => {\n     return [\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n            '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n         new Server(\n             'yamut',\n             'greenmile',\n             'New York No. 1 Lake Park',\n             ['Operational'],\n             '24GB',\n             '24'\n         ),\n         new Server(\n             'yarmon',\n             'armon',\n             'Good',\n             ['Operational'],\n             '128GB',\n             '64'\n         ),\n         new Server(\n             'eliza',\n             'alice',\n             'New York No. 1 Lake Park',\n             ['Tests'],\n             '16GB',\n             '24'\n         ),\n     ];\n };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}